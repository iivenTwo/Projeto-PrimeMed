/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.AgendamentoDAO;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Lopes
 */
public class telaAgendamento extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(telaAgendamento.class.getName());

    /**
     * Creates new form TelaPrincipal
     */
    public telaAgendamento() {
        initComponents();
        
        
        // Carrega o ícone da pasta do projeto
        ImageIcon icon = new ImageIcon(getClass().getResource("/imgs/logo.png"));

        // Define o ícone da janela
        setIconImage(icon.getImage());
        
        setLocationRelativeTo(null); // Centraliza o JFrame na tela
        try {
        javax.swing.text.MaskFormatter formatoCPFagenda = new javax.swing.text.MaskFormatter("###.###.###-##");
        formatoCPFagenda.setPlaceholderCharacter('_');
        formatoCPFagenda.install(cpfPacienteAgenda);  // Aplica a máscara ao campo existente
    } catch (java.text.ParseException e) {
    }
            
        try {
        javax.swing.text.MaskFormatter formatoHora = new javax.swing.text.MaskFormatter("##:##");
        formatoHora.setPlaceholderCharacter('_');
        formatoHora.install(horarioMedicoAgenda);
    } catch (java.text.ParseException e) {
         e.printStackTrace();
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nomePacienteAgenda = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cpfPacienteAgenda = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        nomeMedicoAgenda = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        idMedicoAgenda = new javax.swing.JFormattedTextField();
        botaoIncluirAgendamento = new javax.swing.JButton();
        botaoLimparAgendamento = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        botaoSairAgendamento = new javax.swing.JButton();
        horarioMedicoAgenda = new javax.swing.JFormattedTextField();
        especialidadeAgendamento = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agendamento - PrimeMed");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(500, 460));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setMinimumSize(new java.awt.Dimension(660, 500));
        jPanel3.setName("telalogin"); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(660, 500));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(31, 31, 31));
        jLabel2.setText("Agendamento");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(31, 31, 31));
        jLabel9.setText("Nome Paciente:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(31, 31, 31));
        jLabel10.setText("CPF:");

        cpfPacienteAgenda.setText("000.000.00-00");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(31, 31, 31));
        jLabel11.setText("Horário");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(31, 31, 31));
        jLabel1.setText("Nome Médico:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(31, 31, 31));
        jLabel4.setText("ID:");

        botaoIncluirAgendamento.setBackground(new java.awt.Color(26, 74, 138));
        botaoIncluirAgendamento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botaoIncluirAgendamento.setForeground(new java.awt.Color(255, 255, 255));
        botaoIncluirAgendamento.setText("Incluir");
        botaoIncluirAgendamento.setBorderPainted(false);
        botaoIncluirAgendamento.setDefaultCapable(false);
        botaoIncluirAgendamento.setFocusPainted(false);
        botaoIncluirAgendamento.setFocusable(false);
        botaoIncluirAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoIncluirAgendamentoActionPerformed(evt);
            }
        });

        botaoLimparAgendamento.setBackground(new java.awt.Color(26, 74, 138));
        botaoLimparAgendamento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botaoLimparAgendamento.setForeground(new java.awt.Color(255, 255, 255));
        botaoLimparAgendamento.setText("Limpar");
        botaoLimparAgendamento.setBorderPainted(false);
        botaoLimparAgendamento.setDefaultCapable(false);
        botaoLimparAgendamento.setFocusPainted(false);
        botaoLimparAgendamento.setFocusable(false);
        botaoLimparAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparAgendamentoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(31, 31, 31));
        jLabel5.setText("Especialidade:");

        botaoSairAgendamento.setBackground(new java.awt.Color(26, 74, 138));
        botaoSairAgendamento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botaoSairAgendamento.setForeground(new java.awt.Color(255, 255, 255));
        botaoSairAgendamento.setText("Sair");
        botaoSairAgendamento.setBorderPainted(false);
        botaoSairAgendamento.setDefaultCapable(false);
        botaoSairAgendamento.setFocusPainted(false);
        botaoSairAgendamento.setFocusable(false);
        botaoSairAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSairAgendamentoActionPerformed(evt);
            }
        });

        especialidadeAgendamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Clínica Geral", "Cardiologia", "Dermatologia", "Ginecologia", "Pediatria", "Ortopedia", "Neurologia", "Psiquiatria", "Oftalmologia", "Otorrinolaringologia", "Endocrinologia" }));
        especialidadeAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                especialidadeAgendamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(horarioMedicoAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cpfPacienteAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addComponent(nomePacienteAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(idMedicoAgenda, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nomeMedicoAgenda, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(especialidadeAgendamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(botaoIncluirAgendamento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoLimparAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botaoSairAgendamento))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel2)))
                .addGap(323, 323, 323))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomePacienteAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeMedicoAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel4))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfPacienteAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idMedicoAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11))
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(horarioMedicoAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(especialidadeAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoIncluirAgendamento)
                    .addComponent(botaoSairAgendamento)
                    .addComponent(botaoLimparAgendamento))
                .addGap(0, 238, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 130, 700, 500);

        jPanel1.setBackground(new java.awt.Color(14, 63, 139));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/lgoobranco.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel3)
                .addContainerGap(373, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 700, 130);

        pack();
    }//GEN-END:initComponents

    private void botaoLimparAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparAgendamentoActionPerformed
        nomePacienteAgenda.setText("");
        cpfPacienteAgenda.setText("");
        horarioMedicoAgenda.setText("");

        nomeMedicoAgenda.setText("");
        idMedicoAgenda.setText("");
        especialidadeAgendamento.setSelectedIndex(0);
    }//GEN-LAST:event_botaoLimparAgendamentoActionPerformed

    private void botaoSairAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSairAgendamentoActionPerformed
        this.dispose();
        telaPrincipal tela = new telaPrincipal("Administrador");  // cria a tela principal
        tela.setVisible(true);  
    }//GEN-LAST:event_botaoSairAgendamentoActionPerformed

    private void botaoIncluirAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoIncluirAgendamentoActionPerformed
    String nomePaciente = nomePacienteAgenda.getText().trim();
    String cpfPaciente = cpfPacienteAgenda.getText().trim();
    String horario = horarioMedicoAgenda.getText().trim();
    String nomeMedico = nomeMedicoAgenda.getText().trim();
    String idMedico = idMedicoAgenda.getText().trim();
    String especialidade = (String) especialidadeAgendamento.getSelectedItem();


    // Validação básica dos campos
    if (nomePaciente.isEmpty() || nomePaciente.length() > 32) {
        JOptionPane.showMessageDialog(this, "Nome do paciente inválido (máx 32 caracteres).");
        return;
    }

    if (!cpfPaciente.matches("\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}")) {
        JOptionPane.showMessageDialog(this, "CPF inválido. Formato esperado: 000.000.000-00");
        return;
    }

    if (!horario.matches("\\d{2}:\\d{2}")) {
        JOptionPane.showMessageDialog(this, "Horário inválido. Formato esperado: HH:MM (ex: 08:30)");
        return;
    }

    // Verificar se está dentro do intervalo permitido
    try {
        String[] partes = horario.split(":");
        int hora = Integer.parseInt(partes[0]);
        int minuto = Integer.parseInt(partes[1]);

        if (hora < 7 || hora > 22 || minuto < 0 || minuto > 59) {
            JOptionPane.showMessageDialog(this, "Horário fora do horário de atendimento (07:00 às 22:00).");
            return;
        }

        if (hora == 22 && minuto > 0) {
            JOptionPane.showMessageDialog(this, "Horário fora do horário de atendimento (último horário permitido é 22:00).");
            return;
        }

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Erro ao validar o horário. Verifique o formato (ex: 08:30).");
        return;
    }
    // Fim validação

    if (nomeMedico.isEmpty() || nomeMedico.length() > 32) {
        JOptionPane.showMessageDialog(this, "Nome do profissional não especificado!");
        return;
    }

    if (idMedico.isEmpty() || idMedico.length() > 10 || !idMedico.matches("[a-zA-Z0-9]+")) {
        JOptionPane.showMessageDialog(this, "ID inválido! Use até 10 caracteres.");
        return;
    }


    if (especialidade == null || especialidade.isEmpty() || especialidade.length() > 20) {
        JOptionPane.showMessageDialog(this, "Especialidade não especificada!");
        return;
    }
    
   

    LocalDateTime dataHora;
    try {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
        LocalTime horaParse = LocalTime.parse(horario, formatter);  // converte só o tempo
        LocalDate hoje = LocalDate.now();
        dataHora = LocalDateTime.of(hoje, horaParse);  // combina data de hoje + hora parseada
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao interpretar o horário: " + e.getMessage());
        return;
    }

// Agora pode usar dataHora pra inserir no banco normalmente



    AgendamentoDAO agendamentoDAO = new AgendamentoDAO();
    
    

    try {
        Integer pacienteId = agendamentoDAO.getPacienteIdPorCpf(cpfPaciente);

        if (pacienteId == null) {
            // Caso paciente não exista no banco, só crie o agendamento se nomePaciente for preenchido
            JOptionPane.showMessageDialog(this, "Paciente não encontrado pelo CPF.");
            return;
        }

        int usuarioId;
        try {
            usuarioId = Integer.parseInt(idMedico);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID do médico inválido.");
            return;
        }

        String descricao = "Agendamento com Dr(a). " + nomeMedico + " - Especialidade: " + especialidade;

        boolean sucesso = agendamentoDAO.inserirAgendamento(pacienteId, usuarioId, dataHora, descricao);

        if (sucesso) {
            JOptionPane.showMessageDialog(this, 
                "Agendamento incluído com sucesso!\n\n"
                + "Paciente: " + nomePaciente + "\n"
                + "CPF: " + cpfPaciente + "\n"
                + "Horário: " + horario + "\n"
                + "Médico: " + nomeMedico + "\n"
                + "ID Médico: " + idMedico + "\n"
                + "Especialidade: " + especialidade
            );
            nomePacienteAgenda.setText("");
            cpfPacienteAgenda.setText("");
            horarioMedicoAgenda.setText("");
            nomeMedicoAgenda.setText("");
            idMedicoAgenda.setText("");
            especialidadeAgendamento.setSelectedIndex(0);
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao inserir agendamento no banco.");
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro no banco de dados: " + e.getMessage());
    }
    }//GEN-LAST:event_botaoIncluirAgendamentoActionPerformed

    private void especialidadeAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_especialidadeAgendamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_especialidadeAgendamentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new telaAgendamento().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoIncluirAgendamento;
    private javax.swing.JButton botaoLimparAgendamento;
    private javax.swing.JButton botaoSairAgendamento;
    private javax.swing.JFormattedTextField cpfPacienteAgenda;
    private javax.swing.JComboBox<String> especialidadeAgendamento;
    private javax.swing.JFormattedTextField horarioMedicoAgenda;
    private javax.swing.JFormattedTextField idMedicoAgenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JFormattedTextField nomeMedicoAgenda;
    private javax.swing.JFormattedTextField nomePacienteAgenda;
    // End of variables declaration//GEN-END:variables
}
